/*
#########################################################################
##                                                                     ##
##     nextflow.config                                                 ##
##                                                                     ##
##     Gael A. Millot                                                  ##
##     Bioinformatics and Biostatistics Hub                            ##
##     Computational Biology Department                                ##
##     Institut Pasteur Paris                                          ##
##                                                                     ##
#########################################################################
*/


//////// variables that will be used only in the main.nf

// variables exported to the main.nf environment. See https://www.nextflow.io/docs/latest/config.html#scope-env
env {
    git_path="https://gitlab.pasteur.fr/gmillot/14985_loot/-/raw/master"
    in_path="/mnt/y/14985_loot/B2699/00_Rawdata"
    // in_path="/pasteur/zeus/projets/p01/BioIT/gmillot/14985_loot/B2699/00_Rawdata/"
    fastq_file="Pool-B2699_S1_L001_R1_001.fastq.gz"
    config2 = "${projectDir}/nextflow.config" // default if not argument. Warning : check the default arguments


}

//////// end variables that will be used only in the main.nf




//////// variables that will be used below (and potentially in the main.nf file)

//// must be also exported
//report_path = '/mnt/c/Users/Gael/Desktop' // where the report file will be saved. Example report_path = '.' for where the main.nf run is executed or report_path = '/mnt/c/Users/Gael/Desktop' 
out_path="/mnt/c/Users/Gael/Desktop"
result_folder_name="20210903_res_CL14985"
//// end must be also exported

//// slurm variables
fastqueue = 'common,dedicated' // fast for -p option of slurm. Example: fastqueue = 'common,dedicated'
fastqos= '--qos=fast' // fast for --qos option of slurm. Example: fastqos= '--qos=fast'
normalqueue = 'bioevo' // normal for -p option of slurm. Example: normalqueue = 'bioevo'
normalqos = '--qos=dedicated' // normal for --qos option of slurm. Example: normalqos = '--qos=dedicated'
longqueue = 'bioevo' // slow for -p option of slurm. Example: longqueue = 'bioevo'
longqos = '--qos=dedicated' // slow for --qos option of slurm. Example: longqos = '--qos=dedicated'
add_options = ' ' // additional option of slurm. Example: addoptions = '--exclude=maestro-1101,maestro-1034' or add_options = ' '
//// end slurm variables

//////// end variables that will be used below



//////// Pre processing

out_path="${out_path}/${result_folder_name}"

//////// end Pre processing



//////// variables used here and also in the main.nf file
env {
    out_path = "${out_path}"
}

//////// variables used here and also in the main.nf file





//////// Scopes

// kind of execution. Either 'local' or 'slurm'
// those are closures. See https://www.nextflow.io/docs/latest/script.html#closures
executor {
    name = 'slurm'
    queueSize = 2000
}

// create a report folder and print a html report file . If no absolute path, will be where the run is executed
// see https://www.nextflow.io/docs/latest/config.html#config-report
report {
       enabled = true
       file = "${out_path}/reports/report.html" // warning: here double quotes to get the nextflow variable interpretation
}

// txt file with all the processes and info
trace {
    enabled = true
    file = "${out_path}/reports/trace.txt"
}

// html file with all the processes
timeline {
    enabled = true
    file = "${out_path}/reports/timeline.html"
}

// .dot picture of the workflow
dag {
    enabled = true
    file = "${out_path}/reports/dag.dot"
}


// define singularity parameters
singularity {
    enabled = true
    autoMounts = true // automatically mounts host paths in the executed container
    //runOptions = '--home $HOME:/home/$USER --bind /pasteur' // provide any extra command line options supported by the singularity exec. HEre, fait un bind de tout /pasteur dans /pasteur du container. Sinon pas d accÃ¨s
    cacheDir = 'singularity' // name of the directory where remote Singularity images are stored. When rerun, the exec directly uses these without redownloading them. When using a computing cluster it must be a shared folder accessible to all computing nodes
}

//////// end Scopes



//////// directives

// provide the default directives for all the processes in the main.nf pipeline calling this config file
process {
// directives for all the processes
    executor='local' // or inactivate to use the executor defined above
    queue = "$fastqueue"
    clusterOptions = "$fastqos $add_options"
    scratch=false
    maxRetries=30
    errorStrategy='retry'

    withLabel: bash {
        container='gmillot/coreutils:8.30'
        cpus=1
        memory='3G'
    }

// all the processes of the main.nf file with the label 'bedtools' will use this directives by default
    withLabel: bedtools {
        container='evolbioinfo/bedtools:v2.29.2'
	    cpus=1
        memory='3G'
    }

    withLabel: samtools {
        container='evolbioinfo/samtools:v1.11'
        cpus=1
        memory='1G'
    }

    withLabel: coverage {
        container='evolbioinfo/samtools:v1.11'
        cpus=1
        memory='5G'
    }

    withLabel: gatk {
        //scratch=true
        container='broadinstitute/gatk:4.1.9.0'
        memory='60G'
	   //queue="$normalqueue"
	   //clusterOptions="$normalqos"
        queue = {task.attempt>1 ? "$normalqueue" : "$fastqueue" }
        clusterOptions = {task.attempt > 1 ? "$normalqos $add_options" : "$fastqos $add_options" }
    }

    withLabel: bwa {
        container="evolbioinfo/bwa:v0.7.17"
	    cpus=20
        memory='30G'
    }

    withLabel: bcftools {
        container="evolbioinfo/bcftools:f27f849"
        cpus=1
        memory='10G'
    }

    withLabel: fastqc {
        container='evolbioinfo/fastqc:v0.11.8'
        cpus=1
    }

    withLabel: multiqc {
        container='ewels/multiqc:1.10.1'
        errorStrategy='ignore'
        cpus=1
    }
}

//////// end directives